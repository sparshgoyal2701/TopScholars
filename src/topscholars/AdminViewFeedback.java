/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package topscholars;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author K1LL3R
 */
public class AdminViewFeedback extends javax.swing.JFrame {
    
    private Connection connection;
    private PreparedStatement preparedStatement;
    private ResultSet rs;
    private int count;

    /**
     * Creates new form AdminViewFeedback
     */
    public AdminViewFeedback() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        GoodRB = new javax.swing.JRadioButton();
        BadRB = new javax.swing.JRadioButton();
        PreviousButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FeedbackArea = new javax.swing.JTextArea();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 32, 63));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/topscholars/Images/Logo.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(540, 0, 110, 90);

        jLabel2.setBackground(new java.awt.Color(0, 32, 63));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(187, 232, 215));
        jLabel2.setText("VIEW FEEDBACK");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(120, 40, 310, 40);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(187, 232, 215));
        jLabel3.setText("Feedback Type :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(60, 110, 110, 30);

        GoodRB.setBackground(new java.awt.Color(0, 32, 63));
        GoodRB.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        GoodRB.setForeground(new java.awt.Color(187, 232, 215));
        GoodRB.setText("Good Feedbacks");
        GoodRB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GoodRBMouseClicked(evt);
            }
        });
        jPanel1.add(GoodRB);
        GoodRB.setBounds(240, 110, 150, 30);

        BadRB.setBackground(new java.awt.Color(0, 32, 63));
        BadRB.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        BadRB.setForeground(new java.awt.Color(187, 232, 215));
        BadRB.setText("Bad Feedbacks");
        BadRB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BadRBMouseClicked(evt);
            }
        });
        jPanel1.add(BadRB);
        BadRB.setBounds(440, 110, 150, 30);

        PreviousButton.setBackground(new java.awt.Color(0, 32, 63));
        PreviousButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        PreviousButton.setForeground(new java.awt.Color(187, 232, 215));
        PreviousButton.setText("PREVIOUS");
        PreviousButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        PreviousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousButtonActionPerformed(evt);
            }
        });
        jPanel1.add(PreviousButton);
        PreviousButton.setBounds(70, 380, 100, 40);

        NextButton.setBackground(new java.awt.Color(0, 32, 63));
        NextButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        NextButton.setForeground(new java.awt.Color(187, 232, 215));
        NextButton.setText("NEXT");
        NextButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });
        jPanel1.add(NextButton);
        NextButton.setBounds(480, 380, 100, 40);

        DeleteButton.setBackground(new java.awt.Color(0, 32, 63));
        DeleteButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(187, 232, 215));
        DeleteButton.setText("DELETE");
        DeleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteButton);
        DeleteButton.setBounds(344, 380, 100, 40);

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));

        FeedbackArea.setEditable(false);
        FeedbackArea.setBackground(new java.awt.Color(0, 32, 63));
        FeedbackArea.setColumns(20);
        FeedbackArea.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        FeedbackArea.setForeground(new java.awt.Color(187, 232, 215));
        FeedbackArea.setRows(5);
        jScrollPane1.setViewportView(FeedbackArea);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(60, 160, 530, 200);

        BackButton.setBackground(new java.awt.Color(0, 32, 63));
        BackButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BackButton.setForeground(new java.awt.Color(187, 232, 215));
        BackButton.setText("BACK");
        BackButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BackButton);
        BackButton.setBounds(206, 380, 100, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setLocationRelativeTo(null);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void PreviousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousButtonActionPerformed
        if(GoodRB.isSelected() || BadRB.isSelected()){
            try{
            if(rs.previous()){
                FeedbackArea.setText(rs.getString("description"));
                count--;
            }
            else{
                rs.next();
                JOptionPane.showMessageDialog(null,"No Record !");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }       
    }//GEN-LAST:event_PreviousButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        if(GoodRB.isSelected() || BadRB.isSelected()){
            try{
            if(rs.next()){
                FeedbackArea.setText(rs.getString("description"));
                count++;
            }
            else{
                rs.previous();
                JOptionPane.showMessageDialog(null,"No Record !");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_NextButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        if(GoodRB.isSelected() || BadRB.isSelected()){
            try{
                PreparedStatement pS = connection.prepareStatement("DELETE FROM `feedback` WHERE `description` = ?");
                pS.setString(1,FeedbackArea.getText().trim());
                int len = 0;
                len = pS.executeUpdate();
                if(len > 0){
                    JOptionPane.showMessageDialog(null,"Deleted !");
                }
                pS.close();
                preparedStatement.close();
                rs.close();
                preparedStatement = connection.prepareStatement("SELECT `description` FROM `feedback` WHERE `feedback_type` = ?");
                if(GoodRB.isSelected()){
                    preparedStatement.setString(1,"Good");
                }
                else if(BadRB.isSelected()){
                    preparedStatement.setString(1,"Bad");
                }
                rs = preparedStatement.executeQuery();
                for(int i=0;i<count;i++){
                    rs.next();
                }
                if(rs.next()){
                    FeedbackArea.setText(rs.getString("description"));
                }
                else if(rs.previous()){
                    FeedbackArea.setText(rs.getString("description"));
                    count--;
                }
                else{
                    FeedbackArea.setText("");
                    JOptionPane.showMessageDialog(null, "No more Feedback !");
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }    
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        dispose();
        new AdminMenu().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_BackButtonActionPerformed

    private void GoodRBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoodRBMouseClicked
        BadRB.setSelected(false);
        if(GoodRB.isSelected()){
            try{
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/topscholar", "root", "");
            preparedStatement = connection.prepareStatement("SELECT `description` FROM `feedback` WHERE `feedback_type` = ?");
            preparedStatement.setString(1,"Good");
            rs = preparedStatement.executeQuery();
            rs.next();
            FeedbackArea.setText(rs.getString("description"));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        count=0;
        }
        else{
            FeedbackArea.setText("");
        }
    }//GEN-LAST:event_GoodRBMouseClicked

    private void BadRBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BadRBMouseClicked
        GoodRB.setSelected(false);
        if(BadRB.isSelected()){
            try{
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/topscholar", "root", "");
            preparedStatement = connection.prepareStatement("SELECT `description` FROM `feedback` WHERE `feedback_type` = ?");
            preparedStatement.setString(1,"Bad");
            rs = preparedStatement.executeQuery();
            rs.next();
            FeedbackArea.setText(rs.getString("description"));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        count = 0;
        }
        else{
            FeedbackArea.setText("");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_BadRBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminViewFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminViewFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminViewFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminViewFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminViewFeedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JRadioButton BadRB;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextArea FeedbackArea;
    private javax.swing.JRadioButton GoodRB;
    private javax.swing.JButton NextButton;
    private javax.swing.JButton PreviousButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
