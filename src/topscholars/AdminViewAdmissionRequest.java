/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package topscholars;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author K1LL3R
 */
public class AdminViewAdmissionRequest extends javax.swing.JFrame {

    /**
     * Creates new form AdminViewAddmissionRequest
     */
    public AdminViewAdmissionRequest() {
        initComponents();
        try{
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/topscholar","root","");
            PreparedStatement preparedStatement = connection.prepareStatement("SELECT `application_number`, `name`, `course`, date_format(session_start,\"%Y\") AS `session_start`, date_format(session_end,\"%Y\") AS `session_end` FROM `student_application`");
            ResultSet rs = preparedStatement.executeQuery();
            if(rs.next()){
                rs.previous();
                while(rs.next()){
                DefaultTableModel model = (DefaultTableModel) ApplicationTable.getModel();
                Object [] rowData = new Object[4];
                for (int i = 0; i < 3; ++i){
                    rowData[i] = rs.getObject(i+1);
                }
                rowData[3] = (rs.getObject(4)+"-"+rs.getObject(5));
                model.addRow(rowData);
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"No Record Found !");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ApplicationTable = new javax.swing.JTable();
        SearchField = new javax.swing.JTextField();
        NameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        AcceptButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        FatherNameLabel = new javax.swing.JLabel();
        DOBLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        HQLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PercentageLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CourseLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SessionLabel = new javax.swing.JLabel();
        DeclineButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 32, 63));
        jPanel1.setLayout(null);

        ApplicationTable.setBackground(new java.awt.Color(0, 32, 63));
        ApplicationTable.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        ApplicationTable.setForeground(new java.awt.Color(187, 232, 215));
        ApplicationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Application No.", "Student Name", "Course", "Session"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ApplicationTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(580, 100, 452, 430);

        SearchField.setBackground(new java.awt.Color(187, 232, 215));
        SearchField.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        SearchField.setForeground(new java.awt.Color(0, 32, 63));
        SearchField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });
        jPanel1.add(SearchField);
        SearchField.setBounds(190, 100, 190, 40);

        NameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        NameLabel.setForeground(new java.awt.Color(187, 232, 215));
        NameLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(NameLabel);
        NameLabel.setBounds(280, 160, 240, 30);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(187, 232, 215));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Name                           -");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 160, 160, 30);

        jLabel20.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(187, 232, 215));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Application Number:");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(10, 100, 170, 40);

        BackButton.setBackground(new java.awt.Color(0, 32, 63));
        BackButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BackButton.setForeground(new java.awt.Color(187, 232, 215));
        BackButton.setText("BACK");
        BackButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BackButton);
        BackButton.setBounds(410, 470, 150, 40);

        jLabel3.setBackground(new java.awt.Color(0, 32, 63));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(187, 232, 215));
        jLabel3.setText("ADMISSION APLICATION");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(320, 20, 430, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/topscholars/Images/Logo.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(940, 0, 110, 90);

        SearchButton.setBackground(new java.awt.Color(0, 32, 63));
        SearchButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(187, 232, 215));
        SearchButton.setText("SEARCH");
        SearchButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SearchButton);
        SearchButton.setBounds(410, 100, 150, 40);

        AcceptButton.setBackground(new java.awt.Color(0, 32, 63));
        AcceptButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AcceptButton.setForeground(new java.awt.Color(187, 232, 215));
        AcceptButton.setText("ACCEPT");
        AcceptButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        AcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AcceptButton);
        AcceptButton.setBounds(30, 470, 150, 40);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(187, 232, 215));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Father's Name            -");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(80, 200, 160, 30);

        FatherNameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        FatherNameLabel.setForeground(new java.awt.Color(187, 232, 215));
        FatherNameLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(FatherNameLabel);
        FatherNameLabel.setBounds(280, 200, 240, 30);

        DOBLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        DOBLabel.setForeground(new java.awt.Color(187, 232, 215));
        DOBLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(DOBLabel);
        DOBLabel.setBounds(280, 240, 240, 30);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(187, 232, 215));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Date of Birth               -");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(80, 240, 160, 30);

        HQLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        HQLabel.setForeground(new java.awt.Color(187, 232, 215));
        HQLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(HQLabel);
        HQLabel.setBounds(280, 280, 240, 30);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(187, 232, 215));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Highest Qualification  -");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(80, 280, 160, 30);

        PercentageLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        PercentageLabel.setForeground(new java.awt.Color(187, 232, 215));
        PercentageLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(PercentageLabel);
        PercentageLabel.setBounds(280, 320, 240, 30);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(187, 232, 215));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Percentage                  -");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(80, 320, 160, 30);

        CourseLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        CourseLabel.setForeground(new java.awt.Color(187, 232, 215));
        CourseLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(CourseLabel);
        CourseLabel.setBounds(280, 360, 240, 30);

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(187, 232, 215));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Course                         -");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(80, 360, 160, 30);

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(187, 232, 215));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Session                        -");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(80, 400, 160, 30);

        SessionLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        SessionLabel.setForeground(new java.awt.Color(187, 232, 215));
        SessionLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(187, 232, 215), 3, true));
        jPanel1.add(SessionLabel);
        SessionLabel.setBounds(280, 400, 240, 30);

        DeclineButton.setBackground(new java.awt.Color(0, 32, 63));
        DeclineButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DeclineButton.setForeground(new java.awt.Color(187, 232, 215));
        DeclineButton.setText("DECLINE");
        DeclineButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 232, 215), 4));
        DeclineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeclineButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DeclineButton);
        DeclineButton.setBounds(220, 470, 150, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setLocationRelativeTo(null);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchFieldActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        dispose();
        new AdminMenu().setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        if(SearchField.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter Application Number First!");
        }
        else{
            Connection connection;
            PreparedStatement preparedStatement;
            ResultSet rs;
            try{
                connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/topscholar","root","");
                preparedStatement = connection.prepareStatement("SELECT `name`, `father_name`, date_format(dob,\"%M %d %Y\") AS `dob`, `highest_qualification`, `percentage`, `course`, date_format(session_start,\"%Y\") AS `session_start`, date_format(session_end,\"%Y\") AS `session_end` FROM `student_application` WHERE application_number= ?");
                preparedStatement.setInt(1,Integer.parseInt(SearchField.getText().trim()));
                rs = preparedStatement.executeQuery();
                if(rs.next() == false){
                    JOptionPane.showMessageDialog(null, "Invalid Request Number");
                }
                else{
                    NameLabel.setText(rs.getString("name"));
                    FatherNameLabel.setText(rs.getString("father_name"));
                    DOBLabel.setText(rs.getString("dob"));
                    HQLabel.setText(rs.getString("highest_qualification"));
                    PercentageLabel.setText(rs.getString("percentage"));
                    CourseLabel.setText(rs.getString("course"));
                    SessionLabel.setText(rs.getString("session_start")+"-"+rs.getString("session_end"));
                }
                rs.close();
                preparedStatement.close();
                connection.close();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void AcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptButtonActionPerformed
        if(SearchField.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "First search the application!");
        }
        else{
            Connection connection;
            PreparedStatement preparedStatement, preparedStatement1;
            ResultSet rs, rs1;
            String query = "INSERT INTO `student`(`name`, `father_name`, `mobile_number`, `email`, `address`, `gender`, `dob`, `course`, `session_start`, `session_end`) VALUES (?,?,?,?,?,?,?,?,?,?)";
            try{
                connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/topscholar","root","");
                preparedStatement = connection.prepareStatement("SELECT `application_number`, `password`, `name`, `father_name`, `mobile_number`, `email`, `address`, `gender`, `dob`, `course`, `highest_qualification`, `percentage`, DATE_FORMAT(session_start,\"%Y\")as `session_start`, DATE_FORMAT(session_end,\"%Y\")as `session_end` FROM `student_application` WHERE application_number = ?");
                preparedStatement.setInt(1,Integer.parseInt(SearchField.getText().trim()));
                rs = preparedStatement.executeQuery();
                rs.next();
                preparedStatement1 = connection.prepareStatement(query);
                preparedStatement1.setString(1,rs.getString("name"));
                preparedStatement1.setString(2,rs.getString("father_name"));
                preparedStatement1.setString(3,rs.getString("mobile_number"));
                preparedStatement1.setString(4,rs.getString("email"));
                preparedStatement1.setString(5,rs.getString("address"));
                preparedStatement1.setString(6,rs.getString("gender"));
                preparedStatement1.setString(7,rs.getString("dob"));
                preparedStatement1.setString(8,rs.getString("course"));
                preparedStatement1.setString(9,rs.getString("session_start"));
                preparedStatement1.setString(10,rs.getString("session_end"));
                int len, len1;
                len =0;
                len1 =0;
                len = preparedStatement1.executeUpdate();
                Statement statement = connection.createStatement();
                rs1 = statement.executeQuery("SELECT `student_id` FROM `student`");
                while(rs1.next());
                rs1.previous();
                int StudentID=Integer.parseInt(rs1.getString("student_id"));
                String password = rs.getString("password");
                String Course = rs.getString("course");
                preparedStatement.close();
                preparedStatement1.close();
                if(len >0) {
                    len = 0;
                    preparedStatement = connection.prepareStatement("INSERT INTO `accounts`(`id`, `password`, `account_type`) VALUES (?,?,?)");
                    preparedStatement.setInt(1,StudentID);
                    preparedStatement.setString(2,password);
                    preparedStatement.setString(3,"student");
                    preparedStatement1 = connection.prepareStatement("DELETE FROM `student_application` WHERE application_number = ?");
                    preparedStatement1.setInt(1,Integer.parseInt(SearchField.getText().trim()));
                }
                len = preparedStatement.executeUpdate();
                len1 = preparedStatement1.executeUpdate();
                rs.close();
                rs1.close();
                statement.close();
                if (len > 0 && len1>0) {
                    JOptionPane.showMessageDialog(null, "Application accepted Successfully !\n Student ID - "+StudentID);
                }
                preparedStatement.close();
                preparedStatement = connection.prepareStatement("INSERT INTO `result`(`student_id`, `course`) VALUES (?,?)");
                preparedStatement.setInt(1, StudentID);
                preparedStatement.setString(2, Course);
                preparedStatement.executeUpdate();
                preparedStatement1.close();
                connection.close();
                dispose();
                new AdminViewAdmissionRequest().setVisible(true);
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_AcceptButtonActionPerformed

    private void DeclineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeclineButtonActionPerformed
        if(SearchField.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "First search the application!");
        }
        else{
            Connection connection;
            PreparedStatement preparedStatement;
            try{
                connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/topscholar","root","");
                preparedStatement = connection.prepareStatement("DELETE FROM `student_application` WHERE application_number = ?");
                preparedStatement.setInt(1,Integer.parseInt(SearchField.getText().trim()));
                int len = 0;
                len = preparedStatement.executeUpdate();
                if(len>0){
                    JOptionPane.showMessageDialog(null,"Application Declined !");
                }
                preparedStatement.close();
                connection.close();
                dispose();
                new AdminViewAdmissionRequest().setVisible(true);
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_DeclineButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminViewAdmissionRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminViewAdmissionRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminViewAdmissionRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminViewAdmissionRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminViewAdmissionRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptButton;
    private javax.swing.JTable ApplicationTable;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CourseLabel;
    private javax.swing.JLabel DOBLabel;
    private javax.swing.JButton DeclineButton;
    private javax.swing.JLabel FatherNameLabel;
    private javax.swing.JLabel HQLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel PercentageLabel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.JLabel SessionLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
